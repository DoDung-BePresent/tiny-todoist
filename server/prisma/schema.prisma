generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String?
  avatar      String?

  // Relations
  accounts    Account[]
  tasks       Task[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("users")
}

model Account {
  id                  String    @id @default(cuid())
  userId              String
  type                AccountType
  provider            Provider
  providerAccountId   String

  // Credentials
  password            String?

  // OAuth
  refresh_token       String?   @db.Text
  access_token        String?   @db.Text
  expires_at          Int?

  // Relations
  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)    
  
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  completed   Boolean   @default(false)
  dueDate     DateTime?
  priority    Priority  @default(P4)

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("tasks")
}

enum AccountType {
  oauth
  credentials
}

enum Provider {
  github
  credentials
}

enum Priority {
  P1 // Urgent
  P2 // High
  P3 // Medium
  P4 // Low
}

